-------------
Version 2.0.2
-------------

* fixed formatting bugs in invalid value specification error messages
* updated configure to find and compile with MariaDB and Percona includes & libs


-------------
Version 2.0.1
-------------

* fixed a bug returning numbers with a decimal component


-----------
Version 2.0
-----------

* implemented support for the selectRow DBI method
* implemented supoprt for the prepared statement API (SQLStatement class)
* implemented support for binding and retrieving "number" types
* implemented support for the following DBI options:
  + "optimal-numbers": return numeric types as an integer if possible, if not as an arbitrary-precision number
  + "string-numbers": return numeric types as strings (for backwards-compatibility)
  + "numeric-numbers": return numeric types as arbitrary-precision number values
  + "timezone": accepts a string argument that can be either a region name (ex: "Europe/Prague") or a UTC offset (ex: "+01:00") to set the server's time zone ru\
les; this is useful if connecting to a database server in a different time zone.  If this option is not set then the server's time zone is assumed to be the same as the client's time zone
* the default for the number options is now "optimal-numbers", meaning that NUMERIC or DECIMAL values are retrieved as integers if possible, otherwise an arbitrary-precision number type is returned.


-------------
Version 1.0.8
-------------

execRaw() method implemented
updated to use new date/time APIs when compiled against qore 0.8.0+


-------------
Version 1.0.7
-------------

fixed setting transaction isolation level; was broken when mysql 5.1 fixed a
bug fixed compiling on OS/X snow leopard to target 64-bit by default on i386


-------------
Version 1.0.6
-------------

supports setting the server port number with qore 0.7.5 and greater


-------------
Version 1.0.5
-------------

added the ability to execute statements that are not supported by the mysql
prepared statement interface; in this case the module will fall back to using
the older code.  This allows DML statements to be properly executed with the
Datasource::exec() method, for example.


-------------
Version 1.0.4
-------------

another update to compile properly with MacPorts and with mysql from MacPorts;
searches the prefix first


-------------
Version 1.0.3
-------------

updated to compile properly with MacPorts and with mysql from MacPorts


-------------
Version 1.0.2
-------------

updated configure to check the directory specified with --prefix first when
looking for dependent libraries

updated to compile with mysql 5.1


-------------
Version 1.0.1
-------------

updated to support new module handling and module api for qore 0.7.1
minimum qore library required for build is now qore 0.7.1


-----------
Version 1.0
-----------

initial release as a separate project (separated from the qore project)


--------------------
all earlier releases
--------------------

----------
Qore 0.6.2
----------

*) added support for binary types (BLOBs, etc)
*) mapped DECIMAL type to a string to avoid losing precision
*) timed-out connections will be automatically reconnected if no transaction is
   in progress
*) column names always returned in lower-case


----------
Qore 0.5.2
----------

*) The "mysql" module now supports directly binding data and retrieving values
   from queries in the qore DBI syntax (already supported by the "oracle" 
   module)
*) also the select() and selectRows() DBI methods support value binding as well
   for example, using the test database as given in examples/mysql-test-db.sql
   and the following stored procedure:

delimiter //
create procedure get_family (in id int, out fname varchar(32))
begin
   select name into fname from family where family_id = id;
end;
//

executing:
$h = $mysqldb.exec("call get_family(%v, :name)", 1);

will return ( "name" : "Smith" )

----------
Qore 0.5.0
----------

*) MySQL driver fixed to use the more efficient prepared statement interface
   when available.  There was a bug in the driver causing it to always use the
   older character-based interface even when the prepared statement interface
   was available; this has been fixed

----------
Qore 0.4.0
----------

*) mysql driver substantially updated  
   It now supports threading, proper character set handling, transactions, and
   uses the more efficient prepared statement interface.
